//#region Description

/// The animation class defines common animation styles.
/// API:
/// States:
///     .fade-in, .fade-in-up, .fade-in-up-right, .fade-in-up-left, .fade-in-down, .fade-in-down-right, .fade-in-down-left, .fade-in-right, .fade-in-left
///     .fade-out, .fade-out-up, .fade-out-up-right, .fade-out-up-left, .fade-out-down, .fade-out-down-right, .fade-out-down-left, .fade-out-right, .fade-out-left
///     .scale-in, .scale-out
///     .shake-horizontal, .shake-vertical
///     .roll-in-right, .roll-out-left
///     .rotate
///     .flash
///     .pulse
/// Styles:
///     .infinite, .forever
///     .duration-faster, .duration-fast, .duration-normal, .duration-slow, .duration-slower
///     .delay-faster, .delay-fast, .delay-normal, .delay-slow, .delay-slower

//#endregion

//#region Variables

$fade-offset: 24px;

/// @require {Number} $animation-duration
$animation-duration-map: (
    'faster': #{$animation-duration}ms,
    'fast': #{$animation-duration * 2}ms,
    'normal': #{($animation-duration * 2) * 2}ms,
    'slow': #{(($animation-duration * 2) * 2) * 2}ms,
    'slower': #{((($animation-duration * 2) * 2) * 2) * 2}ms
);

/// @require {Number} $animation-delay
$animation-delay-map: (
    'faster': #{$animation-delay}ms,
    'fast': #{$animation-delay * 2}ms,
    'normal': #{($animation-delay * 2) * 2}ms,
    'slow': #{(($animation-delay * 2) * 2) * 2}ms,
    'slower': #{((($animation-delay * 2) * 2) * 2) * 2}ms
);

//#endregion

//#region Mixins

/// @access public
/// @group Animations
@mixin animations-style {
    .animation {
        //#region Fade

        //#region Fade In

        @include animation-keyframe(fade-in) {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        &.fade-in {
            @include prefixed-properties(('webkit'), animation-name, fade-in);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-init {
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Up

        @include animation-keyframe(fade-in-up) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateY($fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }
        }

        &.fade-in-up {
            @include prefixed-properties(('webkit'), animation-name, fade-in-up);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-up-init {
                @include prefixed-properties(('webkit'), transform, translateY($fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Up Right

        @include animation-keyframe(fade-in-up-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(-$fade-offset, $fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 1;
            }
        }

        &.fade-in-up-right {
            @include prefixed-properties(('webkit'), animation-name, fade-in-up-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-up-right-init {
                @include prefixed-properties(('webkit'), transform, translate(-$fade-offset, $fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Up Left

        @include animation-keyframe(fade-in-up-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate($fade-offset, $fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 1;
            }
        }

        &.fade-in-up-left {
            @include prefixed-properties(('webkit'), animation-name, fade-in-up-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-up-left-init {
                @include prefixed-properties(('webkit'), transform, translate($fade-offset, $fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Down

        @include animation-keyframe(fade-in-down) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateY(-$fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }
        }

        &.fade-in-down {
            @include prefixed-properties(('webkit'), animation-name, fade-in-down);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-down-init {
                @include prefixed-properties(('webkit'), transform, translateY(-$fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Down Right

        @include animation-keyframe(fade-in-down-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate($fade-offset, $fade-offset));
                opacity: 1;
            }
        }

        &.fade-in-down-right {
            @include prefixed-properties(('webkit'), animation-name, fade-in-down-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-down-right-init {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Down Left

        @include animation-keyframe(fade-in-down-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate(-$fade-offset, $fade-offset));
                opacity: 1;
            }
        }

        &.fade-in-down-left {
            @include prefixed-properties(('webkit'), animation-name, fade-in-down-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-down-left-init {
                @include prefixed-properties(('webkit'), transform, translate(0, 0));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Right

        @include animation-keyframe(fade-in-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateX(-$fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX(0));
                opacity: 1;
            }
        }

        &.fade-in-right {
            @include prefixed-properties(('webkit'), animation-name, fade-in-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-right-init {
                @include prefixed-properties(('webkit'), transform, translateX(-$fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade In Left

        @include animation-keyframe(fade-in-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateX($fade-offset));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX(0));
                opacity: 1;
            }
        }

        &.fade-in-left {
            @include prefixed-properties(('webkit'), animation-name, fade-in-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-in-left-init {
                @include prefixed-properties(('webkit'), transform, translateX($fade-offset));
                opacity: 0;
            }
        }

        //#endregion

        //#region Fade Out

        @include animation-keyframe(fade-out) {
            0% {
                opacity: 1;
            }

            100% {
                opacity: 0;
            }
        }

        &.fade-out {
            @include prefixed-properties(('webkit'), animation-name, fade-out);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-init {
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Up

        @include animation-keyframe(fade-out-up) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateY(-$fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-up {
            @include prefixed-properties(('webkit'), animation-name, fade-out-up);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-up-init {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Up Right

        @include animation-keyframe(fade-out-up-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate($fade-offset, -$fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-up-right {
            @include prefixed-properties(('webkit'), animation-name, fade-out-up-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-up-init {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Up Left

        @include animation-keyframe(fade-out-up-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate(-$fade-offset, -$fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-up-left {
            @include prefixed-properties(('webkit'), animation-name, fade-out-up-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-up-left-init {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Down

        @include animation-keyframe(fade-out-down) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateY($fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-down {
            @include prefixed-properties(('webkit'), animation-name, fade-out-down);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-down-init {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Down Right

        @include animation-keyframe(fade-out-down-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate($fade-offset, $fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-down-right {
            @include prefixed-properties(('webkit'), animation-name, fade-out-down-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-down-right-init {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Down Left

        @include animation-keyframe(fade-out-down-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translate(-$fade-offset, $fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-down-left {
            @include prefixed-properties(('webkit'), animation-name, fade-out-down-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-down-left-init {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Right

        @include animation-keyframe(fade-out-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX($fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-right {
            @include prefixed-properties(('webkit'), animation-name, fade-out-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-right-init {
                @include prefixed-properties(('webkit'), transform, translate(0));
                opacity: 1;
            }
        }

        //#endregion

        //#region Fade Out Left

        @include animation-keyframe(fade-out-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateX(0));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX(-$fade-offset));
                opacity: 0;
            }
        }

        &.fade-out-left {
            @include prefixed-properties(('webkit'), animation-name, fade-out-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.fade-out-left-init {
                @include prefixed-properties(('webkit'), transform, translateX(0));
                opacity: 1;
            }
        }

        //#endregion

        //#endregion

        //#region Scale

        //#region Scale In

        @include animation-keyframe(scale-in) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                transform: scale(0.5);
            }

            100% {
                transform: scale(1);
            }
        }

        &.scale-in {
            @include prefixed-properties(('webkit'), animation-name, scale-in);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.scale-in-init {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                transform: scale(0.5);
            }
        }

        //#endregion

        //#region Scale Out

        @include animation-keyframe(scale-out) {
            0% {
                transform: scale(1);
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
                transform: scale(0.5);
            }
        }

        &.scale-out {
            @include prefixed-properties(('webkit'), animation-name, scale-out);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.scale-out-init {
                transform: scale(1);
            }
        }

        //#endregion

        //#endregion

        //#region Shake

        //#region Shake Horizontal

        @include animation-keyframe(shake-horizontal) {
            0%,
            100% {
                @include prefixed-properties(('webkit'), transform, translateX(0));
            }

            10%,
            30%,
            50%,
            70% {
                @include prefixed-properties(('webkit'), transform, translateX(-10px));
            }

            20%,
            40%,
            60% {
                @include prefixed-properties(('webkit'), transform, translateX(10px));
            }

            80% {
                @include prefixed-properties(('webkit'), transform, translateX(8px));
            }

            90% {
                @include prefixed-properties(('webkit'), transform, translateX(-8px));
            }
        }

        &.shake-horizontal {
            @include prefixed-properties(('webkit'), animation-name, shake-horizontal);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.shake-horizontal-init {
                @include prefixed-properties(('webkit'), transform, translateX(0));
            }
        }

        //#endregion

        //#region Shake Vertical

        @include animation-keyframe(shake-vertical) {
            0%,
            100% {
                @include prefixed-properties(('webkit'), transform, translateY(0));
            }

            10%,
            30%,
            50%,
            70% {
                @include prefixed-properties(('webkit'), transform, translateY(-10px));
            }

            20%,
            40%,
            60% {
                @include prefixed-properties(('webkit'), transform, translateY(10px));
            }

            80% {
                @include prefixed-properties(('webkit'), transform, translateY(8px));
            }

            90% {
                @include prefixed-properties(('webkit'), transform, translateY(-8px));
            }
        }

        &.shake-vertical {
            @include prefixed-properties(('webkit'), animation-name, shake-vertical);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.shake-vertical-init {
                @include prefixed-properties(('webkit'), transform, translateY(0));
            }
        }

        //#endregion

        //#endregion

        //#region Roll

        //#region Roll In Right

        @include animation-keyframe(roll-in-right) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateX(-100%) rotate(-30deg * 4));
                opacity: 0;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX(0) rotate(0deg));
                opacity: 1;
            }
        }

        &.roll-in-right {
            @include prefixed-properties(('webkit'), animation-name, roll-in-right);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.roll-in-right-init {
                @include prefixed-properties(('webkit'), transform, translateX(-100%) rotate(-30deg * 4));
                opacity: 0;
            }
        }

        //#endregion

        //#region Roll Out Left

        @include animation-keyframe(roll-out-left) {
            0% {
                @include prefixed-properties(('webkit'), transform, translateX(0) rotate(0deg));
                opacity: 1;
            }

            100% {
                @include prefixed-properties(('webkit'), transform, translateX(-100%) rotate(-30deg * 4));
                opacity: 0;
            }
        }

        &.roll-out-left {
            @include prefixed-properties(('webkit'), animation-name, roll-out-left);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.roll-out-left-init {
                @include prefixed-properties(('webkit'), transform, translateX(0) rotate(0deg));
                opacity: 1;
            }
        }

        //#endregion

        //#endregion

        //#region Rotate

        @include animation-keyframe(rotate) {
            100% {
                @include prefixed-properties(('webkit'), transform, rotate(360deg));
            }
        }

        &.rotate {
            @include prefixed-properties(('webkit'), animation-name, rotate);
            @include prefixed-properties(('webkit'), animation-duration, 8s);
            @include prefixed-properties(('webkit'), animation-timing-function, linear);
            @include prefixed-properties(('webkit'), animation-iteration-count, infinite);

            &.rotate-init {
                @include prefixed-properties(('webkit'), transform, rotate(0));
            }
        }

        //#endregion

        //#region Flash

        @include animation-keyframe(flash) {
            0%,
            50%,
            100% {
                opacity: 1;
            }

            25%,
            75% {
                opacity: 0;
            }
        }

        &.flash {
            @include prefixed-properties(('webkit'), animation-name, flash);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.flash-init {
                opacity: 1;
            }
        }

        //#endregion

        //#region Pulse

        @include animation-keyframe(pulse) {
            0% {
                @include prefixed-properties(('webkit'), transform, scale(1));
            }

            50% {
                @include prefixed-properties(('webkit'), transform, scale(1.2));
            }

            100% {
                @include prefixed-properties(('webkit'), transform, scale(1));
            }
        }

        &.pulse {
            @include prefixed-properties(('webkit'), animation-name, pulse);
            @include prefixed-properties(('webkit'), animation-duration, #{$animation-duration}ms);
            @include prefixed-properties(('webkit'), animation-fill-mode, #{$animation-fill-mode});
            @include prefixed-properties(('webkit'), animation-timing-function, ease-in-out);

            &.pulse-init {
                @include prefixed-properties(('webkit'), transform, scale(1));
            }
        }

        //#endregion

        &.infinite,
        &.forever {
            animation-iteration-count: infinite;
        }

        @each $key, $value in $animation-duration-map {
            &.duration-#{$key} {
                @include prefixed-properties(('webkit'), animation-duration, #{$value});
            }
        }

        @each $key, $value in $animation-delay-map {
            &.delay-#{$key} {
                @include prefixed-properties(('webkit'), animation-delay, #{$value});
            }
        }
    }
}

//#endregion

//  Responsive attributes
//  @see: https://github.com/angular/material/blob/master/src/core/style/layout.scss
//  @see: https://github.com/angular/material/blob/v1.1.10/src/core/services/layout/layout.scss
//  References:
//  1) https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flex
//  2) https://css-tricks.com/almanac/properties/f/flex/
//  3) https://css-tricks.com/snippets/css/a-guide-to-flexbox/
//  4) https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items
//  5) http://godban.com.ua/projects/flexgrid
//
//  key         query                                                   description
//  xs       -> @media (max-width: 599px)                            -> extra small
//  gt-xs    -> @media (min-width: 600px)                            -> greater then extra small
//  lt-sm    -> @media (max-width: 959px)                            -> less then small
//  sm       -> @media (min-width: 600px) and (max-width: 959px)     -> small
//  gt-sm    -> @media (min-width: 960px)                            -> greater then small
//  lt-md    -> @media (max-width: 1279px)                           -> less then medium
//  md       -> @media (min-width: 960px) and (max-width: 1279px)    -> medium
//  gt-md    -> @media (min-width: 1280px)                           -> greater then medium
//  lt-lg    -> @media (max-width: 1919px)                           -> less then large
//  lg       -> @media (min-width: 1280px) and (max-width: 1919px)   -> large
//  gt-lg    -> @media (min-width: 1920px)                           -> greater then large
//  lt-xl    -> @media (max-width: 1920px)                           -> less then extra large
//  xl       -> @media (min-width: 1920px)                           -> extra large

//#region Variables

$layout-gutter-width: 16px !default;
$layout-breakpoint-xs: 600px !default;
$layout-breakpoint-sm: 960px !default;
$layout-breakpoint-md: 1280px !default;
$layout-breakpoint-lg: 1920px !default;

//#endregion

//#region Mixins

/// @access private
@mixin _flex-order-for-name($sizes: null) {
    @if $sizes == null {
        $sizes: '';

        .flex-order {
            order: 0;
        }
    }

    @for $i from -20 through 20 {
        $order: '';
        $suffix: '';
        @each $s in $sizes {
            @if $s != '' {
                $suffix: '#{$s}-#{$i}';
            } @else {
                $suffix: '#{$i}';
            }
            $order: '.flex-order-#{$suffix}';
        }

        #{$order} {
            order: #{$i};
        }
    }
}

/// @access private
@mixin _offset-for-name($sizes: null) {
    @if $sizes == null {
        $sizes: '';
    }
    @for $i from 0 through 19 {
        $offsets: '';
        $suffix: '';
        @each $s in $sizes {
            @if $s != '' {
                $suffix: '#{$s}-#{$i * 5}';
            } @else {
                $suffix: '#{$i * 5}';
            }
            $offsets: '.offset-#{$suffix}, .flex-offset-#{$suffix}, .layout-margin .flex-offset-#{$suffix}, .layout-margin .offset-#{$suffix}';
        }

        #{$offsets} {
            @if $i != 0 {
                @include rtl-prop(margin-left, margin-right, #{$i * 5 + '%'}, auto);
            } @else {
                @include rtl-prop(margin-left, margin-right, 0, auto);
            }
        }
    }
    @each $i in 33 {
        $offsets: '';
        $suffix: '';
        @each $s in $sizes {
            @if $s != '' {
                $suffix: '#{$s}-#{$i}';
            } @else {
                $suffix: '#{$i}';
            }
            $offsets: '.offset-#{$suffix}, .flex-offset-#{$suffix}, .layout-margin .flex-offset-#{$suffix}, .layout-margin .offset-#{$suffix}';
        }

        #{$offsets} {
            margin-left: calc(100% / 3);
        }
    }
    @each $i in 66 {
        $offsets: '';
        $suffix: '';
        @each $s in $sizes {
            @if $s != '' {
                $suffix: '#{$s}-#{$i}';
            } @else {
                $suffix: '#{$i}';
            }
            $offsets: '.offset-#{$suffix}, .flex-offset-#{$suffix}, .layout-margin .flex-offset-#{$suffix}, .layout-margin .offset-#{$suffix}';
        }

        #{$offsets} {
            @include rtl-prop(margin-left, margin-right, calc(200% / 3), auto);
        }
    }
}

/// @access private
@mixin _layout-for-name($name: null) {
    @if $name == null {
        $name: '';
    }
    @if $name != '' {
        $name: '-#{$name}';
    }

    .layout#{$name},
    .layout#{$name}-column,
    .layout#{$name}-row {
        box-sizing: border-box;
        display: -webkit-box;
        display: -webkit-flex;
        display: -moz-box;
        display: -ms-flexbox;
        display: flex;
    }

    .layout#{$name}-column {
        flex-direction: column;
    }

    .layout#{$name}-row {
        flex-direction: row;
    }
}

/// @access private
@mixin _flex-properties-for-name($name: null) {
    $flex-name: 'flex';

    @if $name != null {
        $flex-name: 'flex-#{$name}';
        $name: '-#{$name}';
    } @else {
        $name: '';
    }

    .#{$flex-name} {
        flex: 1;
        box-sizing: border-box;
    } // === flex: 1 1 0%;

    .#{$flex-name}-grow {
        flex: 1 1 100%;
        box-sizing: border-box;
    }

    .#{$flex-name}-initial {
        flex: 0 1 auto;
        box-sizing: border-box;
    }

    .#{$flex-name}-auto {
        flex: 1 1 auto;
        box-sizing: border-box;
    }

    .#{$flex-name}-none {
        flex: 0 0 auto;
        box-sizing: border-box;
    }

    .#{$flex-name}-noshrink {
        flex: 1 0 auto;
        box-sizing: border-box;
    }

    .#{$flex-name}-nogrow {
        flex: 0 1 auto;
        box-sizing: border-box;
    }
    // (1-20) * 5 = 0-100%
    @for $i from 0 through 20 {
        $value: #{$i * 5 + '%'};

        .#{$flex-name}-#{$i * 5} {
            flex: 1 1 100%;
            max-width: #{$value};
            max-height: 100%;
            box-sizing: border-box;
        }

        .layout-row > .#{$flex-name}-#{$i * 5} {
            flex: 1 1 100%;
            max-width: #{$value};
            max-height: 100%;
            box-sizing: border-box;
            // Required by Chrome M48+ due to http://crbug.com/546034
            @if $i == 0 {
                min-width: 0;
            }
        }

        .layout-column > .#{$flex-name}-#{$i * 5} {
            flex: 1 1 100%;
            max-width: 100%;
            max-height: #{$value};
            box-sizing: border-box;
        }

        .layout#{$name}-row > .#{$flex-name}-#{$i * 5} {
            flex: 1 1 100%;
            max-width: #{$value};
            max-height: 100%;
            box-sizing: border-box;
            // Required by Chrome M48+ due to http://crbug.com/546034
            @if $i == 0 {
                min-width: 0;
            }
        }

        .layout#{$name}-column > .#{$flex-name}-#{$i * 5} {
            flex: 1 1 100%;
            max-width: 100%;
            max-height: #{$value};
            box-sizing: border-box;
            // Required by Chrome M48+ due to http://crbug.com/546034
            @if $i == 0 {
                min-height: 0;
            }
        }
    }
    @if ($name == '') {
        .flex-33 {
            flex: 1 1 100%;
            max-width: 33.33%;
            max-height: 100%;
            box-sizing: border-box;
        }

        .flex-66 {
            flex: 1 1 100%;
            max-width: 66.66%;
            max-height: 100%;
            box-sizing: border-box;
        }
    }

    .layout-row {
        > .#{$flex-name}-33 {
            flex: 1 1 33.33%;
            max-width: 33.33%;
            max-height: 100%;
            box-sizing: border-box;
        }

        > .#{$flex-name}-66 {
            flex: 1 1 66.66%;
            max-width: 66.66%;
            max-height: 100%;
            box-sizing: border-box;
        }
    }

    .layout-column {
        > .#{$flex-name}-33 {
            flex: 1 1 33.33%;
            max-width: 100%;
            max-height: 33.33%;
            box-sizing: border-box;
        }

        > .#{$flex-name}-66 {
            flex: 1 1 66.66%;
            max-width: 100%;
            max-height: 66.66%;
            box-sizing: border-box;
        }
    }

    .layout#{$name}-row {
        > .#{$flex-name}-33 {
            flex: 1 1 100%;
            max-width: 33.33%;
            max-height: 100%;
            box-sizing: border-box;
        }

        > .#{$flex-name}-66 {
            flex: 1 1 100%;
            max-width: 66.66%;
            max-height: 100%;
            box-sizing: border-box;
        }

        // Required by Chrome M48+ due to http://crbug.com/546034
        > .flex {
            min-width: 0;
        }
    }

    .layout#{$name}-column {
        > .#{$flex-name}-33 {
            flex: 1 1 100%;
            max-width: 100%;
            max-height: 33.33%;
            box-sizing: border-box;
        }

        > .#{$flex-name}-66 {
            flex: 1 1 100%;
            max-width: 100%;
            max-height: 66.66%;
            box-sizing: border-box;
        }

        // Required by Chrome M48+ due to http://crbug.com/546034
        > .flex {
            min-height: 0;
        }
    }
}

/// @access private
@mixin _layout-align-for-name($suffix: null) {
    // Alignment attributes for layout containers' children
    // Arrange on the Main Axis
    // center, start, end, space-between, space-around
    // flex-start is the default for justify-content
    // ------------------------------
    $name: 'layout-align';
    @if $suffix != null {
        $name: 'layout-align-#{$suffix}';
    }

    // Defaults
    .#{$name},
    .#{$name}-start-stretch {
        justify-content: flex-start;
        align-content: stretch;
        align-items: stretch;
    }

    // Main Axis Center
    .#{$name}-start,
    .#{$name}-start-start,
    .#{$name}-start-center,
    .#{$name}-start-end,
    .#{$name}-start-stretch {
        justify-content: flex-start;
    }

    // Main Axis Center
    .#{$name}-center,
    .#{$name}-center-start,
    .#{$name}-center-center,
    .#{$name}-center-end,
    .#{$name}-center-stretch {
        justify-content: center;
    }

    // Main Axis End
    .#{$name}-end,
    .#{$name}-end-start,
    .#{$name}-end-center,
    .#{$name}-end-end,
    .#{$name}-end-stretch {
        justify-content: flex-end;
    }

    // Main Axis Space Around
    .#{$name}-space-around,
    .#{$name}-space-around-center,
    .#{$name}-space-around-start,
    .#{$name}-space-around-end,
    .#{$name}-space-around-stretch {
        justify-content: space-around;
    }

    // Main Axis Space Between
    .#{$name}-space-between,
    .#{$name}-space-between-center,
    .#{$name}-space-between-start,
    .#{$name}-space-between-end,
    .#{$name}-space-between-stretch {
        justify-content: space-between;
    }

    // Arrange on the Cross Axis
    // center, start, end
    // stretch is the default for align-items
    // ------------------------------
    // Cross Axis Start
    .#{$name}-start-start,
    .#{$name}-center-start,
    .#{$name}-end-start,
    .#{$name}-space-between-start,
    .#{$name}-space-around-start {
        align-items: flex-start;
        align-content: flex-start;
    }

    // Cross Axis Center
    .#{$name}-start-center,
    .#{$name}-center-center,
    .#{$name}-end-center,
    .#{$name}-space-between-center,
    .#{$name}-space-around-center {
        align-items: center;
        align-content: center;
        max-width: 100%;
    }

    // Cross Axis Center IE overflow fix
    .#{$name}-start-center > *,
    .#{$name}-center-center > *,
    .#{$name}-end-center > *,
    .#{$name}-space-between-center > *,
    .#{$name}-space-around-center > * {
        max-width: 100%;
        box-sizing: border-box;
    }

    // Cross Axis End
    .#{$name}-start-end,
    .#{$name}-center-end,
    .#{$name}-end-end,
    .#{$name}-space-between-end,
    .#{$name}-space-around-end {
        align-items: flex-end;
        align-content: flex-end;
    }

    // Cross Axis Start
    .#{$name}-start-stretch,
    .#{$name}-center-stretch,
    .#{$name}-end-stretch,
    .#{$name}-space-between-stretch,
    .#{$name}-space-around-stretch {
        align-items: stretch;
        align-content: stretch;
    }
}

/// @access private
@mixin _layout-padding-margin {
    // NOTE: these`> *` selectors should only be applied for layout="row" or layout="column" children !!
    .layout-padding-sm > *,
    .layout-padding > .flex-sm {
        padding: $layout-gutter-width / 4;
    }

    .layout-padding,
    .layout-padding-gt-sm,
    .layout-padding-md, // NOTE: these`> *` selectors should only be applied for layout="row" or layout="column" children !!
    .layout-padding>*,
    .layout-padding-gt-sm>*,
    .layout-padding-md>*,
    .layout-padding>.flex,
    .layout-padding>.flex-gt-sm,
    .layout-padding>.flex-md {
        padding: $layout-gutter-width / 2;
    }

    // NOTE: these`> *` selectors should only be applied for layout="row" or layout="column" children !!
    .layout-padding-gt-md > *,
    .layout-padding-lg > *,
    .layout-padding-gt-lg > *,
    .layout-padding > .flex-gt-md,
    .layout-padding > .flex-lg,
    .layout-padding > .flex-lg,
    .layout-padding > .flex-gt-lg {
        padding: $layout-gutter-width / 1;
    }

    // Margin enhancements
    .layout-margin-sm > *,
    .layout-margin > .flex-sm {
        margin: $layout-gutter-width / 4;
    }

    .layout-margin,
    .layout-margin-gt-sm,
    .layout-margin-md, // NOTE: these`> *` selectors should only be applied for layout="row" or layout="column" children !!
    .layout-margin>*,
    .layout-margin-gt-sm>*,
    .layout-margin-md>*,
    .layout-margin>.flex,
    .layout-margin>.flex-gt-sm,
    .layout-margin>.flex-md {
        margin: $layout-gutter-width / 2;
    }

    // NOTE: these`> *` selectors should only be applied for layout="row" or layout="column" children !!
    .layout-margin-gt-md > *,
    .layout-margin-lg > *,
    .layout-margin-gt-lg > *,
    .layout-margin > .flex-gt-md,
    .layout-margin > .flex-lg,
    .layout-margin > .flex-gt-lg {
        margin: $layout-gutter-width / 1;
    }

    .layout-wrap {
        flex-wrap: wrap;
    }

    .layout-nowrap {
        flex-wrap: nowrap;
    }

    .layout-fill {
        margin: 0;
        width: 100%;
        min-height: 100%;
        height: 100%;
    }
}

/// @access private
@mixin _layouts-for-breakpoint($name: null) {
    @include _flex-order-for-name($name);
    @include _offset-for-name($name);
    @include _layout-align-for-name($name);
    @include _flex-properties-for-name($name);
    @include _layout-for-name($name);
}

//#endregion

/// @access public
/// @group Layout
@mixin flex-layout {
    @-moz-document url-prefix() {
        .layout-fill {
            margin: 0;
            width: 100%;
            min-height: 100%;
            height: 100%;
        }
    }

    @include _layouts-for-breakpoint;
    @include _layout-padding-margin;

    @media (max-width: $layout-breakpoint-xs - 1) {
        // Xtra-SMALL SCREEN
        .hide-xs,
        .hide {
            &:not(.show-xs):not(.show) {
                display: none;
            }
        }
        @include _layouts-for-breakpoint(xs);
    }

    @media (min-width: $layout-breakpoint-xs) {
        // BIGGER THAN Xtra-SMALL SCREEN
        @include _layouts-for-breakpoint(gt-xs);
    }

    @media (min-width: $layout-breakpoint-xs) and (max-width: $layout-breakpoint-sm - 1) {
        .hide,
        .hide-gt-xs {
            &:not(.show-gt-xs):not(.show-sm):not(.show) {
                display: none;
            }
        }

        .hide-sm:not(.show-gt-xs):not(.show-sm):not(.show) {
            display: none;
        }
        @include _layouts-for-breakpoint(sm);
    }

    @media (min-width: $layout-breakpoint-sm) {
        // BIGGER THAN SMALL SCREEN
        @include _layouts-for-breakpoint(gt-sm);
    }

    @media (min-width: $layout-breakpoint-sm) and (max-width: $layout-breakpoint-md - 1) {
        // MEDIUM SCREEN
        .hide,
        .hide-gt-xs,
        .hide-gt-sm {
            &:not(.show-gt-xs):not(.show-gt-sm):not(.show-md):not(.show) {
                display: none;
            }
        }

        .hide-md:not(.show-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
            display: none;
        }
        @include _layouts-for-breakpoint(md);
    }

    @media (min-width: $layout-breakpoint-md) {
        // BIGGER THAN MEDIUM SCREEN
        @include _layouts-for-breakpoint(gt-md);
    }

    @media (min-width: $layout-breakpoint-md) and (max-width: $layout-breakpoint-lg - 1) {
        // LARGE SCREEN
        .hide,
        .hide-gt-xs,
        .hide-gt-sm,
        .hide-gt-md {
            &:not(.show-gt-xs):not(.show-gt-sm):not(.show-gt-md):not(.show-lg):not(.show) {
                display: none;
            }
        }

        .hide-lg:not(.show-lg):not(.show-gt-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
            display: none;
        }
        @include _layouts-for-breakpoint(lg);
    }

    @media (min-width: $layout-breakpoint-lg) {
        @include _layouts-for-breakpoint(gt-lg);
        @include _layouts-for-breakpoint(xl);

        // BIGGER THAN LARGE SCREEN
        .hide,
        .hide-gt-xs,
        .hide-gt-sm,
        .hide-gt-md,
        .hide-gt-lg {
            &:not(.show-gt-xs):not(.show-gt-sm):not(.show-gt-md):not(.show-gt-lg):not(.show-xl):not(.show) {
                display: none;
            }
        }

        .hide-xl:not(.show-xl):not(.show-gt-lg):not(.show-gt-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
            display: none;
        }
    }

    @media print {
        .hide-print:not(.show-print):not(.show) {
            display: none !important;
        }
    }
}

// @see https://gist.github.com/gisu/04e7ff0aed986c2c1f18c934cc9e8382#file-_cssgrid-scss

// ===================================================
// CSS Grid Layout Helper
//
// To convert some of the CSS Grid Spec 2 features to Spec 1
//
// Author: Sascha Fuchs
//
// ===================================================

/// Add Gap between the boxes
///
/// @group core - cssgrid
///
/// @param   {list}    $boxes - List with box sizes
/// @param   {string}  $gap - Optional column gap
@function box-gap($boxes, $gap) {
    $box: ();

    @for $i from 1 through length($boxes) {
        $box: append($box, nth($boxes, $i), space);

        // Adding Gap Between
        @if $gap > 0 {
            // Not last Loop
            @if $i != length($boxes) {
                $box: append($box, $gap, space);
            }
        }
    }

    @return $box;
}

/// To build Grid Template Columns with optional gap
///
/// @group core - cssgrid
///
/// @param   {string}  $gap - Optional column gap
/// @param   {list}    $columns - Columns sizes
///
/// @require {function} box-gap
///
/// @example scss - scss
///   .test {
///     @include grid-columns(10px, 250px 1fr 50px 100px);
///   }
@mixin grid-columns($gap, $columns) {
    grid-template-columns: $columns;
    @if $gap > 0 {
        grid-column-gap: $gap;
    }

    -ms-grid-columns: box-gap($columns, $gap);
}

/// To build Grid Template Rows with optional gap
///
/// @group core - cssgrid
///
/// @param   {string}  $gap - Optional row gap
/// @param   {list}    $rows - Rows sizes
///
/// @require {function} box-gap
///
/// @example scss - scss
///   .test {
///     @include grid-rows(10px, 1fr);
///   }
@mixin grid-rows($gap, $rows) {
    grid-template-rows: $rows;
    @if $gap > 0 {
        grid-row-gap: $gap;
    }

    -ms-grid-rows: box-gap($rows, $gap);
}

/// Generate a Grid Template Area from a Grid Map
///
/// @group core - cssgrid
///
/// @param   {string}  $area - Name of the Area
/// @param   {map}     $map - Map of your grid area matrix
///
/// @example scss - scss
///    $gridAreaMap: (
///      row1: ('logo', 'nav', 'nav', 'nav'),
///      row2: ('logo', 'empty', 'search', 'search')
///    );
///    @include grid-matrix($gridAreaMap);
@mixin grid-matrix($map) {
    $matrix: ();

    @each $index, $row in $map {
        $list: null;

        @for $i from 1 through length($row) {
            $list: append($list, unquote(nth(($row), $i)), space);
        }

        $matrix: append($matrix, quote($list), space);
    }

    grid-template-areas: $matrix;
}

/// Generate Coordinates based on Grid Matrix and the selected area
///
/// @group core - cssgrid
///
/// @param   {string}  $area - Name of the Area
/// @param   {map}     $map - Map of your grid area matrix
/// @param   {bool}    $columnGap - If you use Gap for Columns
/// @param   {bool}    $rowGap - If you use Gap for Rows
///
/// @example scss - scss
///    $gridAreaMap: (
///      row1: ('logo', 'nav', 'nav', 'nav'),
///      row2: ('logo', 'empty', 'search', 'search')
///    );
///    @include grid-area(logo, $gridAreaMap, true);
@mixin grid-area($area, $map, $columnGap: false, $rowGap: false) {
    // Init Vars
    $gridColumnStart: '';
    $gridColumnEnd: '';
    $gridRows: ();
    $gridRowHeight: '';
    $areaExists: 0;

    // Output regular Area
    grid-area: $area;

    // Generate Old Spec Coordinates based on Area

    // Get Width element
    @for $i from 1 through length($map) {
        @if sl-contain(map-get($map, row#{$i}), $area) {
            $areaExists: append($areaExists, 1);
            $gridRowHeight: append($gridRowHeight, $i);
            $gridColumnStart: index(map-get($map, row#{$i}), $area);
            $gridColumnEnd: sl-last-index(map-get($map, row#{$i}), $area);
            $gridRows: append($gridRows, $i);
        }
    }

    // If Area exists in the Map
    @if length($areaExists) > 1 {
        // Convert Coordinate if Column Gap is active
        @if $columnGap {
            -ms-grid-column: $gridColumnStart + ($gridColumnStart - 1);
            -ms-grid-column-span: $gridColumnEnd - $gridColumnStart + 1 + ($gridColumnEnd - $gridColumnStart);
        } @else {
            -ms-grid-column: $gridColumnStart;
            -ms-grid-column-span: $gridColumnEnd - $gridColumnStart + 1;
        }

        // Add Row Coordinates
        @if $rowGap {
            -ms-grid-row: nth($gridRows, 1) + (nth($gridRows, 1) - 1);
            -ms-grid-row-span: length($gridRowHeight) - 1 + (length($gridRowHeight) - 2);
        } @else {
            -ms-grid-row: nth($gridRows, 1);
            -ms-grid-row-span: length($gridRowHeight) - 1;
        }
    }
}

// new stuff ---------------------
/// @access private
@mixin _grid-layout-align-for-name {
    $name: 'layout-align';

    .#{$name},
    .#{$name}-start-stretch {
        justify-content: flex-start;
        align-content: stretch;
        align-items: stretch;
    }

    .#{$name}-start,
    .#{$name}-start-start,
    .#{$name}-start-center,
    .#{$name}-start-end,
    .#{$name}-start-stretch {
        justify-content: flex-start;
    }

    .#{$name}-center,
    .#{$name}-center-start,
    .#{$name}-center-center,
    .#{$name}-center-end,
    .#{$name}-center-stretch {
        justify-content: center;
    }

    .#{$name}-end,
    .#{$name}-end-start,
    .#{$name}-end-center,
    .#{$name}-end-end,
    .#{$name}-end-stretch {
        justify-content: flex-end;
    }

    .#{$name}-space-around,
    .#{$name}-space-around-center,
    .#{$name}-space-around-start,
    .#{$name}-space-around-end,
    .#{$name}-space-around-stretch {
        justify-content: space-around;
    }

    .#{$name}-space-between,
    .#{$name}-space-between-center,
    .#{$name}-space-between-start,
    .#{$name}-space-between-end,
    .#{$name}-space-between-stretch {
        justify-content: space-between;
    }

    .#{$name}-start-start,
    .#{$name}-center-start,
    .#{$name}-end-start,
    .#{$name}-space-between-start,
    .#{$name}-space-around-start {
        align-items: flex-start;
        align-content: flex-start;
    }

    .#{$name}-start-center,
    .#{$name}-center-center,
    .#{$name}-end-center,
    .#{$name}-space-between-center,
    .#{$name}-space-around-center {
        align-items: center;
        align-content: center;
        max-width: 100%;
    }

    .#{$name}-start-center > *,
    .#{$name}-center-center > *,
    .#{$name}-end-center > *,
    .#{$name}-space-between-center > *,
    .#{$name}-space-around-center > * {
        max-width: 100%;
        box-sizing: border-box;
    }

    .#{$name}-start-end,
    .#{$name}-center-end,
    .#{$name}-end-end,
    .#{$name}-space-between-end,
    .#{$name}-space-around-end {
        align-items: flex-end;
        align-content: flex-end;
    }

    .#{$name}-start-stretch,
    .#{$name}-center-stretch,
    .#{$name}-end-stretch,
    .#{$name}-space-between-stretch,
    .#{$name}-space-around-stretch {
        align-items: stretch;
        align-content: stretch;
    }
}

/// @access public
/// @group Layout
@mixin grid-layout {
    $gird-column-count: 8;
    $grid-column-gap: 16;

    .grid {
        @include _grid-layout-align-for-name;

        &.column-gap {
            grid-column-gap: $grid-column-gap;
        }

        @for $column from 0 to $gird-column-count {
            grid-template-columns: 40px 50px auto 50px 40px;
        }

        &.column-definitions {
            grid-template-columns: 40px 50px auto 50px 40px;
        }

        &.row-definitions {
            grid-template-rows: 25% 100px auto;
        }
    }
}

/// @access public
/// @group Layout
@mixin print-layout {
    @media print {
        html,
        body {
            min-height: 100vh;
            min-width: 100vw;
            margin: 0;
            display: block;
        }

        * {
            background: transparent !important;
            background-color: transparent !important;
            color: #000 !important;
            box-shadow: none !important;
            text-shadow: none !important;
            -webkit-print-color-adjust: exact;
        }
    }

    .no-print {
        @media print {
            display: none !important;
        }
    }
}

/// Generate util classes for `border-radius` property.
/// @access public
/// @group Util
@mixin border-utils {
    .no-border,
    .no-b {
        border: none;
    }

    .no-border-radius,
    .no-br {
        border-radius: 0;
    }

    @for $i from 1 through 12 {
        .border-radius-#{$i * 1},
        .br-#{$i * 1} {
            border-radius: #{$i * 1 + 'px'};
        }
    }
}

/// Generate util classes for `cursor` property.
/// @access public
/// @group Util
@mixin cursor-utils {
    @each $cursor in ('alias' 'all-scroll' 'auto' 'cell' 'context-menu' 'col-resize' 'copy' 'crosshair' 'default' 'e-resize' 'ew-resize' 'grab' 'grabbing' 'help' 'move' 'n-resize' 'ne-resize' 'nesw-resize' 'ns-resize' 'nw-resize' 'nwse-resize' 'no-drop' 'none' 'not-allowed' 'pointer' 'progress' 'row-resize' 's-resize' 'se-resize' 'sw-resize' 'text' 'vertical-text' 'w-resize' 'wait' 'zoom-in' 'zoom-out' 'initial' 'inherit') {
        .cursor-#{$cursor},
        .cur-#{$cursor} {
            cursor: #{$cursor};
        }
    }
}

/// Generate util classes for `display` property.

/// @access public
/// @group Util
@mixin display-utils {
    @each $display in ('block' 'flex' 'inline-block' 'inline' 'none' 'table') {
        .display-#{$display},
        .dis-#{$display} {
            display: #{$display};
        }
    }
}

/// Generate util classes for `font-size` property.
/// @access public
/// @group Util
@mixin font-size-utils {
    @for $size from 1 through 60 {
        .font-size-#{$size * 2},
        .fs-#{$size * 2} {
            font-size: #{$size * 2}px;
        }
    }

    @for $i from 3 through $font-size-loops {
        .font-size-#{$i * $font-size-factor},
        .fs-#{$i * $font-size-factor} {
            font-size: #{$i * $font-size-factor}px;
        }
    }
}

/// Generate util classes for `font-weight` property.
/// @access public
/// @group Util
@mixin font-weight-utils {
    @for $weight from 1 through 9 {
        .font-weight-#{$weight * 100},
        .fw-#{$weight * 100} {
            font-weight: #{$weight * 100};
        }
    }
}

/// Generate util classes for `height` property.
/// @access public
/// @group Util
@mixin height-utils {
    @for $height from 1 through 10 {
        .height-#{$height * 10},
        .h-#{$height * 10} {
            height: percentage($height / 10);
        }

        .max-height-#{$height * 10},
        .mah-#{$height * 10} {
            max-height: percentage($height / 10);
        }

        .min-height-#{$height * 10},
        .mih-#{$height * 10} {
            min-height: percentage($height / 10);
        }
    }

    .full-height {
        height: 100%;
    }

    .full-max-height {
        max-height: 100%;
    }

    .full-min-height {
        min-height: 100%;
    }
}

/// Generate util classes for `line-height` property.
/// @access public
/// @group Util
@mixin line-height-utils {
    @for $line-height from 1 through 60 {
        .line-height-#{$line-height * 2},
        .lh-#{$line-height * 2} {
            line-height: #{$line-height * 2}px;
        }
    }

    @for $i from 3 through $line-height-loops {
        .line-height-#{$i * $line-height-factor},
        .lh-#{$i * $line-height-factor} {
            line-height: #{$i * $line-height-factor}px;
        }
    }
}

//#region Variables

$margin-properties-map: (
    'margin': 'm',
    'margin-top': 'mt',
    'margin-right': 'mr',
    'margin-bottom': 'mb',
    'margin-left': 'ml'
);

//#endregion

/// Generate util classes for `margin` property.
/// @access public
/// @group Util
@mixin margin-utils {
    .no-margin-vertical,
    .no-mv {
        margin-top: 0;
        margin-bottom: 0;
    }

    .no-margin-horizontal,
    .no-mh {
        margin-left: 0;
        margin-right: 0;
    }

    @each $margin-property-name, $margin-property-short-name in $margin-properties-map {
        .no-#{$margin-property-name},
        .no-#{$margin-property-short-name} {
            #{$margin-property-name}: 0;
        }

        @each $breakpoint-key in map-keys($breakpoint-map) {
            .no-margin-vertical-#{$breakpoint-key},
            .no-mv-#{$breakpoint-key} {
                margin-top: 0;
                margin-bottom: 0;
            }

            .no-margin-horizontal-#{$breakpoint-key},
            .no-mh-#{$breakpoint-key} {
                margin-left: 0;
                margin-right: 0;
            }

            @include breakpoint-for($breakpoint-key) {
                .no-#{$margin-property-name}-#{$breakpoint-key},
                .no-#{$margin-property-short-name}-#{$breakpoint-key} {
                    #{$margin-property-name}: 0;
                }
            }
        }
    }

    @for $i from 1 through $margin-loops {
        .margin-vertical-#{$i * $margin-factor},
        .mv-#{$i * $margin-factor} {
            margin-top: #{($i * $margin-factor) + 'px'};
            margin-bottom: #{($i * $margin-factor) + 'px'};
        }

        .margin-horizontal-#{$i * $margin-factor},
        .mh-#{$i * $margin-factor} {
            margin-left: #{($i * $margin-factor) + 'px'};
            margin-right: #{($i * $margin-factor) + 'px'};
        }

        @each $margin-property-name, $margin-property-short-name in $margin-properties-map {
            .#{$margin-property-name}-#{$i * $margin-factor},
            .#{$margin-property-short-name}-#{$i * $margin-factor} {
                #{$margin-property-name}: #{($i * $margin-factor) + 'px'};
            }
        }
        //@include breakpoint-for('gt-sm') {
        //    .margin-vertical-#{$i * $margin-factor},
        //    .mv-#{$i * $margin-factor} {
        //        margin-top: #{($i * $margin-factor * 2) + 'px'};
        //        margin-bottom: #{($i * $margin-factor * 2) + 'px'};
        //    }

        //    .margin-horizontal-#{$i * $margin-factor},
        //    .mh-#{$i * $margin-factor} {
        //        margin-left: #{($i * $margin-factor * 2) + 'px'};
        //        margin-right: #{($i * $margin-factor * 2) + 'px'};
        //    }

        //    @each $margin-property-name, $margin-property-short-name in $margin-properties-map {
        //        .#{$margin-property-name}-#{$i * $margin-factor},
        //        .#{$margin-property-short-name}-#{$i * $margin-factor} {
        //            #{$margin-property-name}: #{($i * $margin-factor * 2) + 'px'};
        //        }
        //    }
        //}
    }
}

/// Generate util classes for `object-fit` property.
/// @access public
/// @group Util
@mixin object-fit-utils {
    @each $fit in ('fill' 'contain' 'cover' 'none' 'scale-down') {
        .object-fit-#{$fit},
        .of-#{$fit} {
            object-fit: #{$fit};
        }
    }
}

/// Generate util classes for `opacity` property.
/// @access public
/// @group Util
@mixin opacity-utils {
    @for $opacity from 1 through 10 {
        .opacity-#{$opacity * 10},
        .o-#{$opacity * 10} {
            opacity: $opacity / 10;
        }
    }

    .full-opacity,
    .full-o {
        opacity: 1;
    }

    .no-opacity,
    .no-o {
        opacity: 0;
    }
}

/// Generate util classes for `outline` property.
/// @access public
/// @group Util
@mixin outline-utils {
    .no-outline {
        outline: none;
    }
}

/// Generate util classes for `overflow` property.
/// @access public
/// @group Util
@mixin overflow-utils {
    @each $coordinate in ('' '-x' '-y') {
        @each $overflow in ('visible' 'hidden' 'scroll' 'auto' 'initial' 'inherit') {
            .overflow#{$coordinate}-#{$overflow},
            .over#{$coordinate}-#{$overflow} {
                overflow#{$coordinate}: #{$overflow};

                // ios smooth scroll fix
                @if $overflow == 'scroll' or $overflow == 'auto' {
                    @include prefixed-properties(('webkit'), overflow-scrolling, touch, false);
                }
            }
        }

        .no-overflow#{$coordinate},
        .no-over#{$coordinate} {
            overflow#{$coordinate}: hidden;
        }
    }
}

//#region Variables

$padding-properties-map: (
    'padding': 'p',
    'padding-top': 'pt',
    'padding-right': 'pr',
    'padding-bottom': 'pb',
    'padding-left': 'pl'
);

//#endregion

/// Generate util classes for `padding` property.
/// @access public
/// @group Util
@mixin padding-utils {
    .no-padding-vertical,
    .no-pv {
        padding-top: 0;
        padding-bottom: 0;
    }

    .no-padding-horizontal,
    .no-ph {
        padding-left: 0;
        padding-right: 0;
    }

    @each $padding-property-name, $padding-property-short-name in $padding-properties-map {
        .no-#{$padding-property-name},
        .no-#{$padding-property-short-name} {
            #{$padding-property-name}: 0;
        }

        @each $breakpoint-key in map-keys($breakpoint-map) {
            .no-padding-vertical-#{$breakpoint-key},
            .no-pv-#{$breakpoint-key} {
                padding-top: 0;
                padding-bottom: 0;
            }

            .no-padding-horizontal-#{$breakpoint-key},
            .no-ph-#{$breakpoint-key} {
                padding-left: 0;
                padding-right: 0;
            }

            @include breakpoint-for($breakpoint-key) {
                .no-#{$padding-property-name}-#{$breakpoint-key},
                .no-#{$padding-property-short-name}-#{$breakpoint-key} {
                    #{$padding-property-name}: 0;
                }
            }
        }
    }

    @for $i from 1 through $padding-loops {
        .padding-vertical-#{$i * $padding-factor},
        .pv-#{$i * $padding-factor} {
            padding-top: #{($i * $padding-factor) + 'px'};
            padding-bottom: #{($i * $padding-factor) + 'px'};
        }

        .padding-horizontal-#{$i * $padding-factor},
        .ph-#{$i * $padding-factor} {
            padding-left: #{($i * $padding-factor) + 'px'};
            padding-right: #{($i * $padding-factor) + 'px'};
        }

        @each $padding-property-name, $padding-property-short-name in $padding-properties-map {
            .#{$padding-property-name}-#{$i * $padding-factor},
            .#{$padding-property-short-name}-#{$i * $padding-factor} {
                #{$padding-property-name}: #{($i * $padding-factor) + 'px'};
            }
        }

        //@include breakpoint-for('gt-sm') {
        //    .padding-vertical-#{$i * $padding-factor},
        //    .pv-#{$i * $padding-factor} {
        //        padding-top: #{($i * $padding-factor * 2) + 'px'};
        //        padding-bottom: #{($i * $padding-factor * 2) + 'px'};
        //    }

        //    .padding-horizontal-#{$i * $padding-factor},
        //    .ph-#{$i * $padding-factor} {
        //        padding-left: #{($i * $padding-factor * 2) + 'px'};
        //        padding-right: #{($i * $padding-factor * 2) + 'px'};
        //    }

        //    @each $padding-property-name, $padding-property-short-name in $padding-properties-map {
        //        .#{$padding-property-name}-#{$i * $padding-factor},
        //        .#{$padding-property-short-name}-#{$i * $padding-factor} {
        //            #{$padding-property-name}: #{($i * $padding-factor * 2) + 'px'};
        //        }
        //    }
        //}
    }
}

/// Generate util classes for `position` property.
/// @access public
/// @group Util
@mixin position-utils {
    @each $position in ('absolute' 'fixed' 'inherit' 'initial' 'marker' 'page' 'relative' 'revert' 'static' 'center' 'sticky' 'unset') {
        .position-#{$position},
        .pos-#{$position} {
            position: #{$position};
        }
    }

    .no-top {
        top: 0;
    }

    .no-bottom {
        bottom: 0;
    }

    .no-left {
        left: 0;
    }

    .no-right {
        right: 0;
    }
}

/// @access public
/// @group Util
@mixin reset-utils {
    html,
    body,
    div,
    span,
    applet,
    object,
    iframe,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    blockquote,
    pre,
    a,
    abbr,
    acronym,
    address,
    big,
    cite,
    code,
    del,
    dfn,
    em,
    img,
    ins,
    kbd,
    q,
    s,
    samp,
    small,
    strike,
    strong,
    sub,
    sup,
    tt,
    var,
    b,
    u,
    i,
    center,
    dl,
    dt,
    dd,
    ol,
    ul,
    li,
    fieldset,
    form,
    label,
    legend,
    table,
    caption,
    tbody,
    tfoot,
    thead,
    tr,
    th,
    td,
    article,
    aside,
    canvas,
    details,
    embed,
    figure,
    figcaption,
    footer,
    header,
    hgroup,
    menu,
    nav,
    output,
    ruby,
    section,
    summary,
    time,
    mark,
    audio,
    video {
        border: none;
        font: inherit;
        font-size: 100%;
        margin: 0;
        padding: 0;
        vertical-align: baseline;
    }

    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    main,
    nav,
    section {
        display: block;
    }

    body {
        line-height: 1;
    }

    ol,
    ul {
        list-style: none;
    }

    blockquote,
    q {
        quotes: none;
    }

    blockquote {
        &::before,
        &::after {
            @include values(content, ('', none));
        }
    }

    q {
        &::before,
        &::after {
            @include values(content, ('', none));
        }
    }

    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
}

/// @access public
/// @group Util
@mixin sanitize-utils {
    *,
    ::before,
    ::after {
        background-repeat: no-repeat;
        box-sizing: border-box;
    }

    ::before,
    ::after {
        text-decoration: inherit;
        vertical-align: inherit;
    }

    html {
        cursor: default;
        font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
        line-height: 1.15;
        -moz-tab-size: 4;
        tab-size: 4;
        -ms-text-size-adjust: 100%;
        -webkit-text-size-adjust: 100%;
        word-break: break-word;
    }

    body {
        margin: 0;
    }

    h1 {
        font-size: 2em;
        margin: 0.67em 0;
    }

    hr {
        height: 0;
        overflow: visible;
    }

    main {
        display: block;
    }

    nav {
        ol,
        ul {
            list-style: none;
        }
    }

    pre {
        font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Noto Mono, Liberation Mono, monospace;
        font-size: 1em;
    }

    a {
        background-color: transparent;
    }

    abbr {
        &[title] {
            text-decoration: underline;
            text-decoration: underline dotted;
        }
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp {
        font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Oxygen Mono, Liberation Mono, monospace;
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    ::-moz-selection,
    ::selection {
        background-color: #b3d4fc;
        color: #000;
        text-shadow: none;
    }

    audio,
    canvas,
    iframe,
    img,
    svg,
    video {
        vertical-align: middle;
    }

    audio,
    video {
        display: inline-block;
    }

    audio {
        &:not([controls]) {
            display: none;
            height: 0;
        }
    }

    img {
        border-style: none;
    }

    svg {
        fill: currentColor;

        &:not(:root) {
            overflow: hidden;
        }
    }

    table {
        border-collapse: collapse;
    }

    button,
    input,
    select,
    textarea {
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
    }

    button,
    input,
    select {
        margin: 0;
    }

    button {
        overflow: visible;
        text-transform: none;
        -webkit-appearance: button;
    }

    [type='button'],
    [type='reset'],
    [type='submit'] {
        -webkit-appearance: button;
    }

    fieldset {
        padding: 0.35em 0.75em 0.625em;
    }

    input {
        overflow: visible;
    }

    legend {
        color: inherit;
        display: table;
        max-width: 100%;
        white-space: normal;
    }

    progress {
        display: inline-block;
        vertical-align: baseline;
    }

    select {
        text-transform: none;
    }

    textarea {
        margin: 0;
        overflow: auto;
        resize: vertical;
    }

    [type='checkbox'],
    [type='radio'] {
        padding: 0;
    }

    [type='search'] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }

    ::-webkit-input-placeholder {
        color: inherit;
        opacity: 0.54;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
    }

    ::-moz-focus-inner {
        border-style: none;
        padding: 0;
    }

    :-moz-focusring {
        outline: 1px dotted ButtonText;
    }

    details {
        display: block;
    }

    dialog {
        background-color: #ffffff;
        border: solid;
        color: #000000;
        display: block;
        height: -moz-fit-content;
        height: -webkit-fit-content;
        height: fit-content;
        left: 0;
        margin: auto;
        padding: 1em;
        position: absolute;
        right: 0;
        width: -moz-fit-content;
        width: -webkit-fit-content;
        width: fit-content;

        &:not([open]) {
            display: none;
        }
    }

    summary {
        display: list-item;
    }

    canvas {
        display: inline-block;
    }

    template {
        display: none;
    }

    a,
    area,
    button,
    input,
    label,
    select,
    summary,
    textarea,
    [tabindex] {
        -ms-touch-action: manipulation;
        touch-action: manipulation;
    }

    [hidden] {
        display: none;
    }

    [aria-busy='true'] {
        cursor: progress;
    }

    [aria-controls] {
        cursor: pointer;
    }

    [aria-disabled],
    [disabled] {
        cursor: not-allowed;
    }

    [aria-hidden='false'][hidden]:not(:focus) {
        clip: rect(0, 0, 0, 0);
        display: inherit;
        position: absolute;
    }
}

/// Generate util classes for `user-select` property.
/// @access public
/// @group Util
@mixin select-utils {
    .no-select {
        @include prefixed-properties(('khtml' 'moz' 'ms' 'webkit'), user-select, none, true);
        @include prefixed-properties(('webkit'), touch-callout, none, false);
    }
}

/// Generate util classes for `height` and `width` property.
/// @access public
/// @group Util
@mixin size-utils {
    @for $size from 1 through 10 {
        .size-#{$size * 10},
        .s-#{$size * 10} {
            height: percentage($size / 10);
            width: percentage($size / 10);
        }
    }

    .full-size {
        height: 100%;
        width: 100%;
    }
}

/// Generate util classes for `text-align` property.
/// @access public
/// @group Util
@mixin text-align-utils {
    @each $text-align in ('justify' 'left' 'right' 'center') {
        .text-align-#{$text-align},
        .ta-#{$text-align} {
            text-align: #{$text-align};
        }
    }
}

/// Generate util classes for `text-transform` property.
/// @access public
/// @group Util
@mixin text-transform-utils {
    @each $text-transform in ('none' 'capitalize' 'uppercase' 'lowercase' 'initial' 'inherit') {
        .text-transform-#{$text-transform},
        .tt-#{$text-transform} {
            text-transform: #{$text-transform};
        }
    }
}

// @todo
// @see https://github.com/angular/components/blob/master/src/material/core/typography/

// $mdc-typography-font-family: unquote('Roboto, sans-serif') !default;

// $mdc-typography-base: (
//     font-family: $mdc-typography-font-family,
//     -moz-osx-font-smoothing: grayscale,
//     -webkit-font-smoothing: antialiased
// ) !default;

// $mdc-typography-font-weight-values: (
//     thin: 100,
//     light: 300,
//     regular: 400,
//     medium: 500,
//     bold: 700,
//     black: 900
// ) !default;

// $mdc-typography-styles: mdc-typography-set-styles_(
//     $mdc-typography-base,
//     (
//         headline1: (
//             font-size: 6rem,
//             // 96sp
//                 line-height: 6rem,
//             font-weight: map-get($mdc-typography-font-weight-values, light),
//             letter-spacing: mdc-typography-get-letter-spacing_(-1.5, 6),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         headline2: (
//             font-size: 3.75rem,
//             // 60sp
//                 line-height: 3.75rem,
//             font-weight: map-get($mdc-typography-font-weight-values, light),
//             letter-spacing: mdc-typography-get-letter-spacing_(-0.5, 3.75),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         headline3: (
//             font-size: 3rem,
//             // 48sp
//                 line-height: 3.125rem,
//             // 50sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: normal,
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         headline4: (
//             font-size: 2.125rem,
//             // 34sp
//                 line-height: 2.5rem,
//             // 40sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.25, 2.125),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         headline5: (
//             font-size: 1.5rem,
//             // 24sp
//                 line-height: 2rem,
//             // 32sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: normal,
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         headline6: (
//             font-size: 1.25rem,
//             // 20sp
//                 line-height: 2rem,
//             // 32sp
//                 font-weight: map-get($mdc-typography-font-weight-values, medium),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.25, 1.25),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         subtitle1: (
//             font-size: 1rem,
//             // 16sp
//                 line-height: 1.75rem,
//             // 28sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.15, 1),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         subtitle2: (
//             font-size: 0.875rem,
//             // 14sp
//                 line-height: 1.375rem,
//             // 22sp
//                 font-weight: map-get($mdc-typography-font-weight-values, medium),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.1, 0.875),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         body1: (
//             font-size: 1rem,
//             // 16sp
//                 line-height: 1.5rem,
//             // 24sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.5, 1),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         body2: (
//             font-size: 0.875rem,
//             // 14sp
//                 line-height: 1.25rem,
//             // 20sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.25, 0.875),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         caption: (
//             font-size: 0.75rem,
//             // 12sp
//                 line-height: 1.25rem,
//             // 20sp
//                 font-weight: map-get($mdc-typography-font-weight-values, regular),
//             letter-spacing: mdc-typography-get-letter-spacing_(0.4, 0.75),
//             text-decoration: inherit,
//             text-transform: inherit
//         ),
//         button: (
//             font-size: 0.875rem,
//             // 14sp
//                 line-height: 2.25rem,
//             // 36sp
//                 font-weight: map-get($mdc-typography-font-weight-values, medium),
//             letter-spacing: mdc-typography-get-letter-spacing_(1.25, 0.875),
//             text-decoration: none,
//             text-transform: uppercase
//         ),
//         overline: (
//             font-size: 0.75rem,
//             // 12sp
//                 line-height: 2rem,
//             // 32sp
//                 font-weight: map-get($mdc-typography-font-weight-values, medium),
//             letter-spacing: mdc-typography-get-letter-spacing_(2, 0.75),
//             text-decoration: none,
//             text-transform: uppercase
//         )
//     )
// ) !default;

/// Generate util classes for `vertical-align` property.
/// @access public
/// @group Util
@mixin vertical-align-utils {
    @each $vertical-align in ('baseline' 'bottom' 'inherit' 'initial' 'middle' 'sub' 'super' 'text-bottom' 'text-top' 'top') {
        .vertical-align-#{$vertical-align},
        .va-#{$vertical-align} {
            vertical-align: #{$vertical-align};
        }
    }
}

/// Generate util classes for `width` property.
/// @access public
/// @group Util
@mixin width-utils {
    @for $width from 1 through 10 {
        .width-#{$width * 10},
        .w-#{$width * 10} {
            width: percentage($width / 10);
        }
    }

    .full-width {
        width: 100%;
    }
}
